{
  "version": 3,
  "file": "ui-router-ng2.js",
  "sources": [
    "@uirouter/angular/statebuilders/views.ts",
    "@uirouter/angular/mergeInjector.ts",
    "@uirouter/angular/directives/uiView.ts",
    "@uirouter/angular/uiRouterConfig.ts",
    "@uirouter/angular/directives/uiSref.ts",
    "@uirouter/angular/directives/uiSrefStatus.ts",
    "@uirouter/angular/directives/uiSrefActive.ts",
    "@uirouter/angular/directives/directives.ts",
    "@uirouter/angular/uiRouterNgModule.ts",
    "@uirouter/angular/lazyLoad/lazyLoadNgModule.ts",
    "@uirouter/angular/statebuilders/lazyLoad.ts",
    "../node_modules/tslib/tslib.es6.js",
    "@uirouter/angular/location/locationService.ts",
    "@uirouter/angular/location/locationConfig.ts",
    "@uirouter/angular/providers.ts",
    "@uirouter/angular/index.ts"
  ],
  "sourcesContent": [
    "/** @module ng2 */ /** */\nimport { isFunction, StateObject } from '@uirouter/core';\nimport { PathNode } from '@uirouter/core';\nimport { pick, forEach } from '@uirouter/core';\nimport { ViewConfig } from '@uirouter/core';\nimport { Ng2ViewDeclaration } from '../interface';\nimport { services } from '@uirouter/core';\nimport { ViewService } from '@uirouter/core';\n\n/**\n * This is a [[StateBuilder.builder]] function for Angular `views`.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angular.\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\n * applies the state-level configuration to a view named `$default`.\n */\nexport function ng2ViewsBuilder(state: StateObject) {\n  const views: { [key: string]: Ng2ViewDeclaration } = {},\n    viewsObject = state.views || { $default: pick(state, ['component', 'bindings']) };\n\n  forEach(viewsObject, function(config: Ng2ViewDeclaration, name: string) {\n    name = name || '$default'; // Account for views: { \"\": { template... } }\n    if (isFunction(config)) config = { component: config as any };\n    if (Object.keys(config).length === 0) return;\n\n    config.$type = 'ng2';\n    config.$context = state;\n    config.$name = name;\n\n    const normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n    config.$uiViewName = normalized.uiViewName;\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n\n    views[name] = config;\n  });\n  return views;\n}\n\nlet id = 0;\nexport class Ng2ViewConfig implements ViewConfig {\n  $id: number = id++;\n  loaded = true;\n\n  constructor(public path: PathNode[], public viewDecl: Ng2ViewDeclaration) {}\n\n  load() {\n    return services.$q.when(this);\n  }\n}\n",
    "/** @module ng2 */ /** */\nimport { Injector } from '@angular/core';\n\n/**\n * Merge two injectors\n *\n * This class implements the Injector ng2 interface but delegates\n * to the Injectors provided in the constructor.\n */\nexport class MergeInjector implements Injector {\n  static NOT_FOUND = {};\n  private injectors: Injector[];\n  constructor(...injectors: Injector[]) {\n    if (injectors.length < 2) throw new Error('pass at least two injectors');\n    this.injectors = injectors;\n  }\n\n  /**\n   * Get the token from the first injector which contains it.\n   *\n   * Delegates to the first Injector.get().\n   * If not found, then delegates to the second Injector (and so forth).\n   * If no Injector contains the token, return the `notFoundValue`, or throw.\n   *\n   * @param token the DI token\n   * @param notFoundValue the value to return if none of the Injectors contains the token.\n   * @returns {any} the DI value\n   */\n  get(token: any, notFoundValue?: any): any {\n    for (let i = 0; i < this.injectors.length; i++) {\n      const val = this.injectors[i].get(token, MergeInjector.NOT_FOUND);\n      if (val !== MergeInjector.NOT_FOUND) return val;\n    }\n\n    if (arguments.length >= 2) return notFoundValue;\n\n    // This will throw the DI Injector error\n    this.injectors[0].get(token);\n  }\n}\n",
    "/** @ng2api @module directives */\n/** */\nimport {\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ReflectiveInjector,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport {\n  ActiveUIView,\n  filter,\n  inArray,\n  isFunction,\n  NATIVE_INJECTOR_TOKEN,\n  Param,\n  parse,\n  PathNode,\n  ResolveContext,\n  StateDeclaration,\n  trace,\n  Transition,\n  TransitionHookFn,\n  UIRouter,\n  unnestR,\n  ViewConfig,\n  ViewContext,\n} from '@uirouter/core';\nimport { Ng2ViewConfig } from '../statebuilders/views';\nimport { MergeInjector } from '../mergeInjector';\nimport { Ng2Component } from '../interface';\n\n/** @hidden */\nlet id = 0;\n\n/** @internalapi These are provide()d as the string UIView.PARENT_INJECT */\nexport interface ParentUIViewInject {\n  context: ViewContext;\n  fqn: string;\n}\n\n/** @internalapi */\ninterface InputMapping {\n  token: string;\n  prop: string;\n}\n\n/**\n * Given a component class, gets the inputs of styles:\n *\n * - @Input('foo') _foo\n * - `inputs: ['foo']`\n *\n * @internalapi\n */\nconst ng2ComponentInputs = (factory: ComponentFactory<any>): InputMapping[] => {\n  return factory.inputs.map(input => ({ prop: input.propName, token: input.templateName }));\n};\n\n/**\n * A UI-Router viewport directive, which is filled in by a view (component) on a state.\n *\n * ### Selector\n *\n * A `ui-view` directive can be created as an element: `<ui-view></ui-view>` or as an attribute: `<div ui-view></div>`.\n *\n * ### Purpose\n *\n * This directive is used in a Component template (or as the root component) to create a viewport.  The viewport\n * is filled in by a view (as defined by a [[Ng2ViewDeclaration]] inside a [[Ng2StateDeclaration]]) when the view's\n * state has been activated.\n *\n * #### Example:\n * ```js\n * // This app has two states, 'foo' and 'bar'\n * stateRegistry.register({ name: 'foo', url: '/foo', component: FooComponent });\n * stateRegistry.register({ name: 'bar', url: '/bar', component: BarComponent });\n * ```\n * ```html\n * <!-- This ui-view will be filled in by the foo state's component or\n *      the bar state's component when the foo or bar state is activated -->\n * <ui-view></ui-view>\n * ```\n *\n * ### Named ui-views\n *\n * A `ui-view` may optionally be given a name via the attribute value: `<div ui-view='header'></div>`.  *Note:\n * an unnamed `ui-view` is internally named `$default`*.   When a `ui-view` has a name, it will be filled in\n * by a matching named view.\n *\n * #### Example:\n * ```js\n * stateRegistry.register({\n *   name: 'foo',\n *   url: '/foo',\n *   views: { header: HeaderComponent, $default: FooComponent });\n * ```\n * ```html\n * <!-- When 'foo' state is active, filled by HeaderComponent -->\n * <div ui-view=\"header\"></div>\n *\n * <!-- When 'foo' state is active, filled by FooComponent -->\n * <ui-view></ui-view>\n * ```\n */\n\nexport class UIView implements OnInit, OnDestroy {\n  static PARENT_INJECT = 'UIView.PARENT_INJECT';\n\n  \n  _componentTarget: ViewContainerRef;\n   name: string;\n\n  \n  set _name(val: string) {\n    this.name = val;\n  }\n\n  /** The reference to the component currently inside the viewport */\n  _componentRef: ComponentRef<any>;\n  /** Deregisters the ui-view from the view service */\n  private _deregisterUIView: Function;\n  /** Deregisters the master uiCanExit transition hook */\n  private _deregisterUiCanExitHook: Function;\n  /** Deregisters the master uiOnParamsChanged transition hook */\n  private _deregisterUiOnParamsChangedHook: Function;\n  /** Data about the this UIView */\n  private _uiViewData: ActiveUIView = <any>{};\n  private _parent: ParentUIViewInject;\n\n  constructor(\n    public router: UIRouter,\n     parent,\n    public viewContainerRef: ViewContainerRef,\n  ) {\n    this._parent = parent;\n  }\n\n  /**\n   * @returns the UI-Router `state` that is filling this uiView, or `undefined`.\n   */\n  public get state(): StateDeclaration {\n    return parse('_uiViewData.config.viewDecl.$context.self')(this);\n  }\n\n  ngOnInit() {\n    const router = this.router;\n    const parentFqn = this._parent.fqn;\n    const name = this.name || '$default';\n\n    this._uiViewData = {\n      $type: 'ng2',\n      id: id++,\n      name: name,\n      fqn: parentFqn ? parentFqn + '.' + name : name,\n      creationContext: this._parent.context,\n      configUpdated: this._viewConfigUpdated.bind(this),\n      config: undefined,\n    };\n\n    this._deregisterUiCanExitHook = router.transitionService.onBefore({}, trans => {\n      return this._invokeUiCanExitHook(trans);\n    });\n\n    this._deregisterUiOnParamsChangedHook = router.transitionService.onSuccess({}, trans =>\n      this._invokeUiOnParamsChangedHook(trans),\n    );\n\n    this._deregisterUIView = router.viewService.registerUIView(this._uiViewData);\n  }\n\n  /**\n   * For each transition, checks the component loaded in the ui-view for:\n   *\n   * - has a uiCanExit() component hook\n   * - is being exited\n   *\n   * If both are true, adds the uiCanExit component function as a hook to that singular Transition.\n   */\n  private _invokeUiCanExitHook(trans: Transition) {\n    const instance = this._componentRef && this._componentRef.instance;\n    const uiCanExitFn: TransitionHookFn = instance && instance.uiCanExit;\n\n    if (isFunction(uiCanExitFn)) {\n      const state: StateDeclaration = this.state;\n\n      if (trans.exiting().indexOf(state) !== -1) {\n        trans.onStart({}, function() {\n          return uiCanExitFn.call(instance, trans);\n        });\n      }\n    }\n  }\n\n  /**\n   * For each transition, checks if any param values changed and notify component\n   */\n  private _invokeUiOnParamsChangedHook($transition$: Transition) {\n    const instance: Ng2Component = this._componentRef && this._componentRef.instance;\n    const uiOnParamsChanged: TransitionHookFn = instance && instance.uiOnParamsChanged;\n\n    if (isFunction(uiOnParamsChanged)) {\n      const viewState: StateDeclaration = this.state;\n      const resolveContext: ResolveContext = new ResolveContext(this._uiViewData.config.path);\n      const viewCreationTrans = resolveContext.getResolvable('$transition$').data;\n\n      // Exit early if the $transition$ is the same as the view was created within.\n      // Exit early if the $transition$ will exit the state the view is for.\n      if ($transition$ === viewCreationTrans || $transition$.exiting().indexOf(viewState as StateDeclaration) !== -1)\n        return;\n\n      const toParams: { [paramName: string]: any } = $transition$.params('to');\n      const fromParams: { [paramName: string]: any } = $transition$.params('from');\n      const getNodeSchema = (node: PathNode) => node.paramSchema;\n      const toSchema: Param[] = $transition$\n        .treeChanges('to')\n        .map(getNodeSchema)\n        .reduce(unnestR, []);\n      const fromSchema: Param[] = $transition$\n        .treeChanges('from')\n        .map(getNodeSchema)\n        .reduce(unnestR, []);\n\n      // Find the to params that have different values than the from params\n      const changedToParams = toSchema.filter((param: Param) => {\n        const idx = fromSchema.indexOf(param);\n        return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n      });\n\n      // Only trigger callback if a to param has changed or is new\n      if (changedToParams.length) {\n        const changedKeys: string[] = changedToParams.map(x => x.id);\n        // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n        const newValues = filter(toParams, (val, key) => changedKeys.indexOf(key) !== -1);\n        instance.uiOnParamsChanged(newValues, $transition$);\n      }\n    }\n  }\n\n  private _disposeLast() {\n    if (this._componentRef) this._componentRef.destroy();\n    this._componentRef = null;\n  }\n\n  ngOnDestroy() {\n    if (this._deregisterUIView) this._deregisterUIView();\n    if (this._deregisterUiCanExitHook) this._deregisterUiCanExitHook();\n    if (this._deregisterUiOnParamsChangedHook) this._deregisterUiOnParamsChangedHook();\n    this._deregisterUIView = this._deregisterUiCanExitHook = this._deregisterUiOnParamsChangedHook = null;\n    this._disposeLast();\n  }\n\n  /**\n   * The view service is informing us of an updated ViewConfig\n   * (usually because a transition activated some state and its views)\n   */\n  _viewConfigUpdated(config: ViewConfig) {\n    // The config may be undefined if there is nothing currently targeting this UIView.\n    // Dispose the current component, if there is one\n    if (!config) return this._disposeLast();\n\n    // Only care about Ng2 configs\n    if (!(config instanceof Ng2ViewConfig)) return;\n\n    // The \"new\" viewconfig is already applied, so exit early\n    if (this._uiViewData.config === config) return;\n\n    // This is a new ViewConfig.  Dispose the previous component\n    this._disposeLast();\n    trace.traceUIViewConfigUpdated(this._uiViewData, config && config.viewDecl.$context);\n\n    this._applyUpdatedConfig(config);\n\n    // Initiate change detection for the newly created component\n    this._componentRef.changeDetectorRef.markForCheck();\n  }\n\n  private _applyUpdatedConfig(config: Ng2ViewConfig) {\n    this._uiViewData.config = config;\n    // Create the Injector for the routed component\n    const context = new ResolveContext(config.path);\n    const componentInjector = this._getComponentInjector(context);\n\n    // Get the component class from the view declaration. TODO: allow promises?\n    const componentClass = config.viewDecl.component;\n\n    // Create the component\n    const compFactoryResolver = componentInjector.get(ComponentFactoryResolver);\n    const compFactory = compFactoryResolver.resolveComponentFactory(componentClass);\n    this._componentRef = this._componentTarget.createComponent(compFactory, undefined, componentInjector);\n\n    // Wire resolves to @Input()s\n    this._applyInputBindings(compFactory, this._componentRef.instance, context, componentClass);\n  }\n\n  /**\n   * Creates a new Injector for a routed component.\n   *\n   * Adds resolve values to the Injector\n   * Adds providers from the NgModule for the state\n   * Adds providers from the parent Component in the component tree\n   * Adds a PARENT_INJECT view context object\n   *\n   * @returns an Injector\n   */\n  private _getComponentInjector(context: ResolveContext): Injector {\n    // Map resolves to \"useValue: providers\"\n    const resolvables = context\n      .getTokens()\n      .map(token => context.getResolvable(token))\n      .filter(r => r.resolved);\n\n    const newProviders = resolvables.map(r => ({ provide: r.token, useValue: context.injector().get(r.token) }));\n\n    const parentInject = { context: this._uiViewData.config.viewDecl.$context, fqn: this._uiViewData.fqn };\n    newProviders.push({ provide: UIView.PARENT_INJECT, useValue: parentInject });\n\n    const parentComponentInjector = this.viewContainerRef.injector;\n    const moduleInjector = context.getResolvable(NATIVE_INJECTOR_TOKEN).data;\n    const mergedParentInjector = new MergeInjector(moduleInjector, parentComponentInjector);\n\n    return ReflectiveInjector.resolveAndCreate(newProviders, mergedParentInjector);\n  }\n\n  /**\n   * Supplies component inputs with resolve data\n   *\n   * Finds component inputs which match resolves (by name) and sets the input value\n   * to the resolve data.\n   */\n  private _applyInputBindings(factory: ComponentFactory<any>, component: any, context: ResolveContext, componentClass) {\n    const bindings = this._uiViewData.config.viewDecl['bindings'] || {};\n    const explicitBoundProps = Object.keys(bindings);\n\n    // Returns the actual component property for a renamed an input renamed using `@Input('foo') _foo`.\n    // return the `_foo` property\n    const renamedInputProp = (prop: string) => {\n      const input = factory.inputs.find(i => i.templateName === prop);\n      return (input && input.propName) || prop;\n    };\n\n    // Supply resolve data to component as specified in the state's `bindings: {}`\n    const explicitInputTuples = explicitBoundProps.reduce(\n      (acc, key) => acc.concat([{ prop: renamedInputProp(key), token: bindings[key] }]),\n      [],\n    );\n\n    // Supply resolve data to matching @Input('prop') or inputs: ['prop']\n    const implicitInputTuples = ng2ComponentInputs(factory).filter(tuple => !inArray(explicitBoundProps, tuple.prop));\n\n    const addResolvable = (tuple: InputMapping) => ({\n      prop: tuple.prop,\n      resolvable: context.getResolvable(tuple.token),\n    });\n\n    const injector = context.injector();\n\n    explicitInputTuples\n      .concat(implicitInputTuples)\n      .map(addResolvable)\n      .filter(tuple => tuple.resolvable && tuple.resolvable.resolved)\n      .forEach(tuple => {\n        component[tuple.prop] = injector.get(tuple.resolvable.token);\n      });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ui-view, [ui-view]',\n  exportAs: 'uiView',\n  template: `\n    <ng-template #componentTarget></ng-template>\n    <ng-content *ngIf=\"!_componentRef\"></ng-content>\n  `,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UIRouter, },\n{type: undefined, decorators: [{ type: Inject, args: [UIView.PARENT_INJECT, ] }, ]},\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_componentTarget': [{ type: ViewChild, args: ['componentTarget', { read: ViewContainerRef }, ] },],\n'name': [{ type: Input, args: ['name', ] },],\n'_name': [{ type: Input, args: ['ui-view', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n",
    "/** @module ng2 */ /** */\nimport { UIRouter, isFunction, StateObject } from '@uirouter/core';\nimport { StatesModule, RootModule } from './uiRouterNgModule';\nimport { Injector } from '@angular/core';\nimport { isDefined } from '@uirouter/core';\n\nexport function applyModuleConfig(uiRouter: UIRouter, injector: Injector, module: StatesModule = {}): StateObject[] {\n  if (isFunction(module.config)) {\n    module.config(uiRouter, injector, module);\n  }\n\n  const states = module.states || [];\n  return states.map(state => uiRouter.stateRegistry.register(state));\n}\n\nexport function applyRootModuleConfig(uiRouter: UIRouter, injector: Injector, module: RootModule) {\n  isDefined(module.deferIntercept) && uiRouter.urlService.deferIntercept(module.deferIntercept);\n  isDefined(module.otherwise) && uiRouter.urlService.rules.otherwise(module.otherwise);\n  isDefined(module.initial) && uiRouter.urlService.rules.initial(module.initial);\n}\n",
    "/** @ng2api @module directives */\n/** */\nimport { UIRouter, extend, Obj, TransitionOptions, TargetState, isNumber } from '@uirouter/core';\nimport {\n  Directive,\n  Inject,\n  Input,\n  Optional,\n  ElementRef,\n  Renderer2,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n} from '@angular/core';\nimport { UIView, ParentUIViewInject } from './uiView';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { Subscription } from 'rxjs/Subscription';\n\n/**\n * @internalapi\n * # blah blah blah\n */\n\nexport class AnchorUISref {\n  constructor(public _el: ElementRef, public _renderer: Renderer2) {}\n  openInNewTab() {\n    return this._el.nativeElement.target === '_blank';\n  }\n  update(href: string) {\n    if (href && href !== '') {\n      this._renderer.setProperty(this._el.nativeElement, 'href', href);\n    } else {\n      this._renderer.removeAttribute(this._el.nativeElement, 'href');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: 'a[uiSref]' }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\n/**\n * A directive when clicked, initiates a [[Transition]] to a [[TargetState]].\n *\n * ### Purpose\n *\n * This directive is applied to anchor tags (`<a>`) or any other clickable element.  It is a state reference (or sref --\n * similar to an href).  When clicked, the directive will transition to that state by calling [[StateService.go]],\n * and optionally supply state parameter values and transition options.\n *\n * When this directive is on an anchor tag, it will also add an `href` attribute to the anchor.\n *\n * ### Selector\n *\n * - `[uiSref]`: The directive is created as an attribute on an element, e.g., `<a uiSref></a>`\n *\n * ### Inputs\n *\n * - `uiSref`: the target state's name, e.g., `uiSref=\"foostate\"`.  If a component template uses a relative `uiSref`,\n * e.g., `uiSref=\".child\"`, the reference is relative to that component's state.\n *\n * - `uiParams`: any target state parameter values, as an object, e.g., `[uiParams]=\"{ fooId: bar.fooId }\"`\n *\n * - `uiOptions`: [[TransitionOptions]], e.g., `[uiOptions]=\"{ inherit: false }\"`\n *\n * @example\n * ```html\n *\n * <!-- Targets bar state' -->\n * <a uiSref=\"bar\">Bar</a>\n *\n * <!-- Assume this component's state is \"foo\".\n *      Relatively targets \"foo.child\" -->\n * <a uiSref=\".child\">Foo Child</a>\n *\n * <!-- Targets \"bar\" state and supplies parameter value -->\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\">Bar {{foo.barId}}</a>\n *\n * <!-- Targets \"bar\" state and parameter, doesn't inherit existing parameters-->\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\" [uiOptions]=\"{ inherit: false }\">Bar {{foo.barId}}</a>\n * ```\n */\n\nexport class UISref implements OnChanges {\n  /**\n   * `@Input('uiSref')` The name of the state to link to\n   *\n   * ```html\n   * <a uiSref=\"hoome\">Home</a>\n   * ```\n   */\n   state: string;\n\n  /**\n   * `@Input('uiParams')` The parameter values to use (as key/values)\n   *\n   * ```html\n   * <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\n   * ```\n   */\n   params: any;\n\n  /**\n   * `@Input('uiOptions')` The transition options\n   *\n   * ```html\n   * <a uiSref=\"books\" [uiOptions]=\"{ reload: true }\">Book {{ book.name }}</a>\n   * ```\n   */\n   options: TransitionOptions;\n\n  /**\n   * An observable (ReplaySubject) of the state this UISref is targeting.\n   * When the UISref is clicked, it will transition to this [[TargetState]].\n   */\n  public targetState$ = new ReplaySubject<TargetState>(1);\n\n  /** @internalapi */ private _emit = false;\n  /** @internalapi */ private _statesSub: Subscription;\n  /** @internalapi */ private _router: UIRouter;\n  /** @internalapi */ private _anchorUISref: AnchorUISref;\n  /** @internalapi */ private _parent: ParentUIViewInject;\n\n  constructor(\n    _router: UIRouter,\n     _anchorUISref: AnchorUISref,\n     parent: ParentUIViewInject,\n  ) {\n    this._router = _router;\n    this._anchorUISref = _anchorUISref;\n    this._parent = parent;\n\n    this._statesSub = _router.globals.states$.subscribe(() => this.update());\n  }\n\n  /** @internalapi */\n  set uiSref(val: string) {\n    this.state = val;\n    this.update();\n  }\n  /** @internalapi */\n  set uiParams(val: Obj) {\n    this.params = val;\n    this.update();\n  }\n  /** @internalapi */\n  set uiOptions(val: TransitionOptions) {\n    this.options = val;\n    this.update();\n  }\n\n  ngOnInit() {\n    this._emit = true;\n    this.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngOnDestroy() {\n    this._emit = false;\n    this._statesSub.unsubscribe();\n    this.targetState$.unsubscribe();\n  }\n\n  private update() {\n    const $state = this._router.stateService;\n    if (this._emit) {\n      const newTarget = $state.target(this.state, this.params, this.getOptions());\n      this.targetState$.next(newTarget);\n    }\n\n    if (this._anchorUISref) {\n      const href = $state.href(this.state, this.params, this.getOptions());\n      this._anchorUISref.update(href);\n    }\n  }\n\n  getOptions() {\n    const defaultOpts: TransitionOptions = {\n      relative: this._parent && this._parent.context && this._parent.context.name,\n      inherit: true,\n      source: 'sref',\n    };\n    return extend(defaultOpts, this.options || {});\n  }\n\n  /** When triggered by a (click) event, this function transitions to the UISref's target state */\n  \n  go(button: number, ctrlKey: boolean, metaKey: boolean) {\n    if (\n      (this._anchorUISref &&\n        (this._anchorUISref.openInNewTab() || button || !isNumber(button) || ctrlKey || metaKey)) ||\n      !this.state\n    ) {\n      return;\n    }\n\n    this._router.stateService.go(this.state, this.params, this.getOptions());\n    return false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uiSref]',\n  exportAs: 'uiSref',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UIRouter, },\n{type: AnchorUISref, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [UIView.PARENT_INJECT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input, args: ['uiSref', ] },],\n'params': [{ type: Input, args: ['uiParams', ] },],\n'options': [{ type: Input, args: ['uiOptions', ] },],\n'go': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n",
    "/** @ng2api @module directives */\n/** */\nimport { Directive, Output, EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { UISref } from './uiSref';\nimport {\n  PathNode,\n  Transition,\n  TargetState,\n  StateObject,\n  anyTrueR,\n  tail,\n  unnestR,\n  Predicate,\n  UIRouterGlobals,\n  Param,\n  PathUtils,\n  StateOrName,\n} from '@uirouter/core';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { of } from 'rxjs/observable/of';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { switchMap } from 'rxjs/operator/switchMap';\nimport { map } from 'rxjs/operator/map';\nimport { concat } from 'rxjs/operator/concat';\n\n/** @internalapi */\ninterface TransEvt {\n  evt: string;\n  trans: Transition;\n}\n\n/**\n * UISref status emitted from [[UISrefStatus]]\n */\nexport interface SrefStatus {\n  /** The sref's target state (or one of its children) is currently active */\n  active: boolean;\n  /** The sref's target state is currently active */\n  exact: boolean;\n  /** A transition is entering the sref's target state */\n  entering: boolean;\n  /** A transition is exiting the sref's target state */\n  exiting: boolean;\n  /** The enclosed sref(s) target state(s) */\n  targetStates: TargetState[];\n}\n\n/** @internalapi */\nconst inactiveStatus: SrefStatus = {\n  active: false,\n  exact: false,\n  entering: false,\n  exiting: false,\n  targetStates: [],\n};\n\n/**\n * Returns a Predicate<PathNode[]>\n *\n * The predicate returns true when the target state (and param values)\n * match the (tail of) the path, and the path's param values\n *\n * @internalapi\n */\nconst pathMatches = (target: TargetState): Predicate<PathNode[]> => {\n  if (!target.exists()) return () => false;\n  const state: StateObject = target.$state();\n  const targetParamVals = target.params();\n  const targetPath: PathNode[] = PathUtils.buildPath(target);\n  const paramSchema: Param[] = targetPath\n    .map(node => node.paramSchema)\n    .reduce(unnestR, [])\n    .filter((param: Param) => targetParamVals.hasOwnProperty(param.id));\n\n  return (path: PathNode[]) => {\n    const tailNode = tail(path);\n    if (!tailNode || tailNode.state !== state) return false;\n    const paramValues = PathUtils.paramValues(path);\n    return Param.equals(paramSchema, paramValues, targetParamVals);\n  };\n};\n\n/**\n * Given basePath: [a, b], appendPath: [c, d]),\n * Expands the path to [c], [c, d]\n * Then appends each to [a,b,] and returns: [a, b, c], [a, b, c, d]\n *\n * @internalapi\n */\nfunction spreadToSubPaths(basePath: PathNode[], appendPath: PathNode[]): PathNode[][] {\n  return appendPath.map(node => basePath.concat(PathUtils.subPath(appendPath, n => n.state === node.state)));\n}\n\n/**\n * Given a TransEvt (Transition event: started, success, error)\n * and a UISref Target State, return a SrefStatus object\n * which represents the current status of that Sref:\n * active, activeEq (exact match), entering, exiting\n *\n * @internalapi\n */\nfunction getSrefStatus(event: TransEvt, srefTarget: TargetState): SrefStatus {\n  const pathMatchesTarget = pathMatches(srefTarget);\n  const tc = event.trans.treeChanges();\n\n  const isStartEvent = event.evt === 'start';\n  const isSuccessEvent = event.evt === 'success';\n  const activePath: PathNode[] = isSuccessEvent ? tc.to : tc.from;\n\n  const isActive = () =>\n    spreadToSubPaths([], activePath)\n      .map(pathMatchesTarget)\n      .reduce(anyTrueR, false);\n\n  const isExact = () => pathMatchesTarget(activePath);\n\n  const isEntering = () =>\n    spreadToSubPaths(tc.retained, tc.entering)\n      .map(pathMatchesTarget)\n      .reduce(anyTrueR, false);\n\n  const isExiting = () =>\n    spreadToSubPaths(tc.retained, tc.exiting)\n      .map(pathMatchesTarget)\n      .reduce(anyTrueR, false);\n\n  return {\n    active: isActive(),\n    exact: isExact(),\n    entering: isStartEvent ? isEntering() : false,\n    exiting: isStartEvent ? isExiting() : false,\n    targetStates: [srefTarget],\n  } as SrefStatus;\n}\n\n/** @internalapi */\nfunction mergeSrefStatus(left: SrefStatus, right: SrefStatus): SrefStatus {\n  return {\n    active: left.active || right.active,\n    exact: left.exact || right.exact,\n    entering: left.entering || right.entering,\n    exiting: left.exiting || right.exiting,\n    targetStates: left.targetStates.concat(right.targetStates),\n  };\n}\n\n/**\n * A directive which emits events when a paired [[UISref]] status changes.\n *\n * This directive is primarily used by the [[UISrefActive]] directives to monitor `UISref`(s).\n *\n * This directive shares two attribute selectors with `UISrefActive`:\n *\n * - `[uiSrefActive]`\n * - `[uiSrefActiveEq]`.\n *\n * Thus, whenever a `UISrefActive` directive is created, a `UISrefStatus` directive is also created.\n *\n * Most apps should simply use `UISrefActive`, but some advanced components may want to process the\n * [[SrefStatus]] events directly.\n *\n * ```js\n * <li (uiSrefStatus)=\"onSrefStatusChanged($event)\">\n *   <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\n * </li>\n * ```\n *\n * The `uiSrefStatus` event is emitted whenever an enclosed `uiSref`'s status changes.\n * The event emitted is of type [[SrefStatus]], and has boolean values for `active`, `exact`, `entering`, and `exiting`; also has a [[StateOrName]] `identifier`value.\n *\n * The values from this event can be captured and stored on a component (then applied, e.g., using ngClass).\n *\n * ---\n *\n * A single `uiSrefStatus` can enclose multiple `uiSref`.\n * Each status boolean (`active`, `exact`, `entering`, `exiting`) will be true if *any of the enclosed `uiSref` status is true*.\n * In other words, all enclosed `uiSref` statuses  are merged to a single status using `||` (logical or).\n *\n * ```js\n * <li (uiSrefStatus)=\"onSrefStatus($event)\" uiSref=\"admin\">\n *   Home\n *   <ul>\n *     <li> <a uiSref=\"admin.users\">Users</a> </li>\n *     <li> <a uiSref=\"admin.groups\">Groups</a> </li>\n *   </ul>\n * </li>\n * ```\n *\n * In the above example, `$event.active === true` when either `admin.users` or `admin.groups` is active.\n *\n * ---\n *\n * This API is subject to change.\n */\n\nexport class UISrefStatus {\n  /** current statuses of the state/params the uiSref directive is linking to */\n   uiSrefStatus = new EventEmitter<SrefStatus>(false);\n  /** Monitor all child components for UISref(s) */\n  \n  private _srefs: QueryList<UISref>;\n\n  /** The current status */\n  status: SrefStatus;\n\n  /** @internalapi */ private _subscription: Subscription;\n  /** @internalapi */ private _srefChangesSub: Subscription;\n  /** @internalapi */ private _srefs$: BehaviorSubject<UISref[]>;\n  /** @internalapi */ private _globals: UIRouterGlobals;\n  constructor(_globals: UIRouterGlobals) {\n    this._globals = _globals;\n    this.status = Object.assign({}, inactiveStatus);\n  }\n\n  ngAfterContentInit() {\n    // Map each transition start event to a stream of:\n    // start -> (success|error)\n    const transEvents$: Observable<TransEvt> = switchMap.call(this._globals.start$, (trans: Transition) => {\n      const event = (evt: string) => ({ evt, trans } as TransEvt);\n\n      const transStart$ = of(event('start'));\n      const transResult = trans.promise.then(() => event('success'), () => event('error'));\n      const transFinish$ = fromPromise(transResult);\n\n      return concat.call(transStart$, transFinish$);\n    });\n\n    // Watch the @ContentChildren UISref[] components and get their target states\n\n    // let srefs$: Observable<UISref[]> = of(this.srefs.toArray()).concat(this.srefs.changes);\n    this._srefs$ = new BehaviorSubject(this._srefs.toArray());\n    this._srefChangesSub = this._srefs.changes.subscribe(srefs => this._srefs$.next(srefs));\n\n    const targetStates$: Observable<TargetState[]> = switchMap.call(this._srefs$, (srefs: UISref[]) =>\n      combineLatest<TargetState[]>(srefs.map(sref => sref.targetState$)),\n    );\n\n    // Calculate the status of each UISref based on the transition event.\n    // Reduce the statuses (if multiple) by or-ing each flag.\n    this._subscription = switchMap\n      .call(transEvents$, (evt: TransEvt) => {\n        return map.call(targetStates$, (targets: TargetState[]) => {\n          const statuses: SrefStatus[] = targets.map(target => getSrefStatus(evt, target));\n          return statuses.reduce(mergeSrefStatus);\n        });\n      })\n      .subscribe(this._setStatus.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) this._subscription.unsubscribe();\n    if (this._srefChangesSub) this._srefChangesSub.unsubscribe();\n    if (this._srefs$) this._srefs$.unsubscribe();\n    this._subscription = this._srefChangesSub = this._srefs$ = undefined;\n  }\n\n  private _setStatus(status: SrefStatus) {\n    this.status = status;\n    this.uiSrefStatus.emit(status);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uiSrefStatus],[uiSrefActive],[uiSrefActiveEq]',\n  exportAs: 'uiSrefStatus',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UIRouterGlobals, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uiSrefStatus': [{ type: Output, args: ['uiSrefStatus', ] },],\n'_srefs': [{ type: ContentChildren, args: [UISref, { descendants: true }, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n",
    "/** @ng2api @module directives */ /** */\nimport { Directive, Input, ElementRef, Host, Renderer } from '@angular/core';\nimport { UISrefStatus, SrefStatus } from './uiSrefStatus';\nimport { Subscription } from 'rxjs/Subscription';\n\n/**\n * A directive that adds a CSS class when its associated `uiSref` link is active.\n *\n * ### Purpose\n *\n * This directive should be paired with one (or more) [[UISref]] directives.\n * It will apply a CSS class to its element when the state the `uiSref` targets is activated.\n *\n * This can be used to create navigation UI where the active link is highlighted.\n *\n * ### Selectors\n *\n * - `[uiSrefActive]`: When this selector is used, the class is added when the target state or any\n * child of the target state is active\n * - `[uiSrefActiveEq]`: When this selector is used, the class is added when the target state is\n * exactly active (the class is not added if a child of the target state is active).\n *\n * ### Inputs\n *\n * - `uiSrefActive`/`uiSrefActiveEq`: one or more CSS classes to add to the element, when the `uiSref` is active\n *\n * #### Example:\n * The anchor tag has the `active` class added when the `foo` state is active.\n * ```html\n * <a uiSref=\"foo\" uiSrefActive=\"active\">Foo</a>\n * ```\n *\n * ### Matching parameters\n *\n * If the `uiSref` includes parameters, the current state must be active, *and* the parameter values must match.\n *\n * #### Example:\n * The first anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\n * equals 25.\n * The second anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\n * equals 32.\n * ```html\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 25 }\" uiSrefActive=\"active\">Bar #25</a>\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 32 }\" uiSrefActive=\"active\">Bar #32</a>\n * ```\n *\n * #### Example:\n * A list of anchor tags are created for a list of `bar` objects.\n * An anchor tag will have the `active` class when `foo.bar` state is active and the `id` parameter matches\n * that object's `id`.\n * ```html\n * <li *ngFor=\"let bar of bars\">\n *   <a uiSref=\"foo.bar\" [uiParams]=\"{ id: bar.id }\" uiSrefActive=\"active\">Bar #{{ bar.id }}</a>\n * </li>\n * ```\n *\n * ### Multiple uiSrefs\n *\n * A single `uiSrefActive` can be used for multiple `uiSref` links.\n * This can be used to create (for example) a drop down navigation menu, where the menui is highlighted\n * if *any* of its inner links are active.\n *\n * The `uiSrefActive` should be placed on an ancestor element of the `uiSref` list.\n * If anyof the `uiSref` links are activated, the class will be added to the ancestor element.\n *\n * #### Example:\n * This is a dropdown nagivation menu for \"Admin\" states.\n * When any of `admin.users`, `admin.groups`, `admin.settings` are active, the `<li>` for the dropdown\n * has the `dropdown-child-active` class applied.\n * Additionally, the active anchor tag has the `active` class applied.\n * ```html\n * <ul class=\"dropdown-menu\">\n *   <li uiSrefActive=\"dropdown-child-active\" class=\"dropdown admin\">\n *     Admin\n *     <ul>\n *       <li><a uiSref=\"admin.users\" uiSrefActive=\"active\">Users</a></li>\n *       <li><a uiSref=\"admin.groups\" uiSrefActive=\"active\">Groups</a></li>\n *       <li><a uiSref=\"admin.settings\" uiSrefActive=\"active\">Settings</a></li>\n *     </ul>\n *   </li>\n * </ul>\n * ```\n */\n\nexport class UISrefActive {\n  private _classes: string[] = [];\n  \n  set active(val: string) {\n    this._classes = val.split(/\\s+/);\n  }\n\n  private _classesEq: string[] = [];\n  \n  set activeEq(val: string) {\n    this._classesEq = val.split(/\\s+/);\n  }\n\n  private _subscription: Subscription;\n  constructor(uiSrefStatus: UISrefStatus, rnd: Renderer,  host: ElementRef) {\n    this._subscription = uiSrefStatus.uiSrefStatus.subscribe((next: SrefStatus) => {\n      this._classes.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.active));\n      this._classesEq.forEach(cls => rnd.setElementClass(host.nativeElement, cls, next.exact));\n    });\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uiSrefActive],[uiSrefActiveEq]',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UISrefStatus, },\n{type: Renderer, },\n{type: ElementRef, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input, args: ['uiSrefActive', ] },],\n'activeEq': [{ type: Input, args: ['uiSrefActiveEq', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n",
    "/**\n * The UI-Router for Angular directives:\n *\n * - [[UIView]]: A viewport for routed components\n * - [[UISref]]: A state ref to a target state; navigates when clicked\n * - [[UISrefActive]]: (and `UISrefActiveEq`) Adds a css class when a UISref's target state (or a child state) is active\n *\n * @ng2api\n * @preferred\n * @module directives\n */ /** */\nimport { UISref, AnchorUISref } from './uiSref';\nimport { UISrefActive } from './uiSrefActive';\nimport { UIView } from './uiView';\nimport { UISrefStatus } from './uiSrefStatus';\n\nexport * from './uiView';\nexport * from './uiSref';\nexport * from './uiSrefStatus';\nexport * from './uiSrefActive';\n\n/** @internalapi */\nexport const _UIROUTER_DIRECTIVES = [UISref, AnchorUISref, UIView, UISrefActive, UISrefStatus];\n\n/**\n * References to the UI-Router directive classes, for use within a @Component's `directives:` property\n * @deprecated use [[UIRouterModule]]\n * @internalapi\n */\nexport const UIROUTER_DIRECTIVES = _UIROUTER_DIRECTIVES;\n",
    "/** @ng2api @module core */\n/** */\nimport { Ng2StateDeclaration } from './interface';\nimport {\n  NgModule,\n  ModuleWithProviders,\n  ANALYZE_FOR_ENTRY_COMPONENTS,\n  Provider,\n  Injector,\n  InjectionToken,\n  APP_INITIALIZER,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  CommonModule,\n  LocationStrategy,\n  HashLocationStrategy,\n  PathLocationStrategy,\n  isPlatformServer,\n} from '@angular/common';\nimport { _UIROUTER_DIRECTIVES } from './directives/directives';\nimport { UIView } from './directives/uiView';\nimport { UrlRuleHandlerFn, TargetState, TargetStateDef, UIRouter, TransitionService } from '@uirouter/core';\nimport { _UIROUTER_INSTANCE_PROVIDERS, _UIROUTER_SERVICE_PROVIDERS } from './providers';\n\nimport { ROUTES } from '@angular/router';\n/** @hidden */ export const UIROUTER_ROOT_MODULE = new InjectionToken('UIRouter Root Module');\n/** @hidden */ export const UIROUTER_MODULE_TOKEN = new InjectionToken('UIRouter Module');\n/** @hidden */ export const UIROUTER_STATES = new InjectionToken('UIRouter States');\n// /** @hidden */ export const ROUTES = UIROUTER_STATES;\n\n// Delay angular bootstrap until first transition is successful, for SSR.\n// See https://github.com/ui-router/angular/pull/127\nexport function onTransitionReady(transitionService: TransitionService, root: RootModule[]) {\n  const mod = root[0];\n  if (!mod || !mod.deferInitialRender) {\n    return () => Promise.resolve();\n  }\n\n  return () =>\n    new Promise(resolve => {\n      const hook = trans => {\n        trans.promise.then(resolve, resolve);\n      };\n      transitionService.onStart({}, hook, { invokeLimit: 1 });\n    });\n}\n\nexport function makeRootProviders(module: RootModule): Provider[] {\n  return [\n    { provide: UIROUTER_ROOT_MODULE, useValue: module, multi: true },\n    { provide: UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\n    { provide: ROUTES, useValue: module.states || [], multi: true },\n    { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: onTransitionReady,\n      deps: [TransitionService, UIROUTER_ROOT_MODULE],\n      multi: true,\n    },\n  ];\n}\n\nexport function makeChildProviders(module: StatesModule): Provider[] {\n  return [\n    { provide: UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\n    { provide: ROUTES, useValue: module.states || [], multi: true },\n    { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\n  ];\n}\n\nexport function locationStrategy(useHash) {\n  return { provide: LocationStrategy, useClass: useHash ? HashLocationStrategy : PathLocationStrategy };\n}\n\n/**\n * Creates UI-Router Modules\n *\n * This class has two static factory methods which create UIRouter Modules.\n * A UI-Router Module is an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n * with support for UI-Router.\n *\n * ### UIRouter Directives\n *\n * When a UI-Router Module is imported into a `NgModule`, that module's components\n * can use the UIRouter Directives such as [[UIView]], [[UISref]], [[UISrefActive]].\n *\n * ### State Definitions\n *\n * State definitions found in the `states:` property are provided to the Dependency Injector.\n * This enables UI-Router to automatically register the states with the [[StateRegistry]] at bootstrap (and during lazy load).\n *\n * ### Entry Components\n *\n * Any routed components are added as `entryComponents:` so they will get compiled.\n */\n\nexport class UIRouterModule {\n  /**\n   * Creates a UI-Router Module for the root (bootstrapped) application module to import\n   *\n   * This factory function creates an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n   * with UI-Router support.\n   *\n   * The `forRoot` module should be added to the `imports:` of the `NgModule` being bootstrapped.\n   * An application should only create and import a single `NgModule` using `forRoot()`.\n   * All other modules should be created using [[UIRouterModule.forChild]].\n   *\n   * Unlike `forChild`, an `NgModule` returned by this factory provides the [[UIRouter]] singleton object.\n   * This factory also accepts root-level router configuration.\n   * These are the only differences between `forRoot` and `forChild`.\n   *\n   * Example:\n   * ```js\n   * let routerConfig = {\n   *   otherwise: '/home',\n   *   states: [homeState, aboutState]\n   * };\n   *\n   * @ NgModule({\n   *   imports: [\n   *     BrowserModule,\n   *     UIRouterModule.forRoot(routerConfig),\n   *     FeatureModule1\n   *   ]\n   * })\n   * class MyRootAppModule {}\n   *\n   * browserPlatformDynamic.bootstrapModule(MyRootAppModule);\n   * ```\n   *\n   * @param config declarative UI-Router configuration\n   * @returns an `NgModule` which provides the [[UIRouter]] singleton instance\n   */\n  static forRoot(config: RootModule = {}): ModuleWithProviders {\n    return {\n      ngModule: UIRouterModule,\n      providers: [\n        _UIROUTER_INSTANCE_PROVIDERS,\n        _UIROUTER_SERVICE_PROVIDERS,\n        locationStrategy(config.useHash),\n        ...makeRootProviders(config),\n      ],\n    };\n  }\n\n  /**\n   * Creates an `NgModule` for a UIRouter module\n   *\n   * This function creates an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n   * with UI-Router support.\n   *\n   * #### Example:\n   * ```js\n   * var homeState = { name: 'home', url: '/home', component: Home };\n   * var aboutState = { name: 'about', url: '/about', component: About };\n   *\n   * @ NgModule({\n   *   imports: [\n   *     UIRouterModule.forChild({ states: [ homeState, aboutState ] }),\n   *     SharedModule,\n   *   ],\n   *   declarations: [ Home, About ],\n   * })\n   * export class AppModule {};\n   * ```\n   *\n   * @param module UI-Router module options\n   * @returns an `NgModule`\n   */\n  static forChild(module: StatesModule = {}): ModuleWithProviders {\n    return {\n      ngModule: UIRouterModule,\n      providers: makeChildProviders(module),\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [_UIROUTER_DIRECTIVES],\n  exports: [_UIROUTER_DIRECTIVES],\n  entryComponents: [UIView],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n/**\n * UI-Router declarative configuration which can be provided to [[UIRouterModule.forRoot]]\n */\nexport interface RootModule extends StatesModule {\n  /**\n   * Chooses a `LocationStrategy`.\n   *\n   * The location strategy enables either HTML5 Push State\n   * (Requires server-side support) or \"HashBang\" URLs.\n   *\n   * When `false`, uses [`PathLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/PathLocationStrategy-class.html)\n   * When `true`, uses [`HashLocationStrategy`](https://angular.io/docs/ts/latest/api/common/index/HashLocationStrategy-class.html)\n   *\n   * Defaults to `false`\n   */\n  useHash?: boolean;\n\n  /**\n   * Configures the `otherwise` rule, which chooses the state or URL to activate when no other routes matched.\n   *\n   * See: [[UrlRulesApi.otherwise]].\n   */\n  otherwise?: string | UrlRuleHandlerFn | TargetState | TargetStateDef;\n\n  /**\n   * Configures the `initial` rule, which chooses the state or URL to activate when the\n   * application initially starts, and no other routes matched.\n   *\n   * See: [[UrlRulesApi.initial]].\n   */\n  initial?: string | UrlRuleHandlerFn | TargetState | TargetStateDef;\n\n  /**\n   * Sets [[UrlRouterProvider.deferIntercept]]\n   */\n  deferIntercept?: boolean;\n\n  /**\n   * Tells Angular to defer the first render until after the initial transition is complete.\n   *\n   * When `true`, adds an async `APP_INITIALIZER` which is resolved after any `onSuccess` or `onError`.\n   * The initializer stops angular from rendering the root component until after the first transition completes.\n   * This may prevent initial page flicker while the state is being loaded.\n   *\n   * Defaults to `false`\n   */\n  deferInitialRender?: boolean;\n}\n\n/**\n * UI-Router Module declarative configuration which can be passed to [[UIRouterModule.forChild]]\n */\nexport interface StatesModule {\n  /**\n   * The module's UI-Router states\n   *\n   * This list of [[Ng2StateDeclaration]] objects will be registered with the [[StateRegistry]].\n   * Also, the components that the states route to will be added to `entryComponents` so they will be compiled.\n   */\n  states?: Ng2StateDeclaration[];\n\n  /**\n   * A UI-Router Module's imperative configuration\n   *\n   * If a UI-Router Module needs to perform some configuration (such as registering\n   * parameter types or Transition Hooks) a `configFn` should be supplied.\n   * The function will be passed the `UIRouter` instance, the module's `Injector`,\n   * and the module object.\n   *\n   * #### Example:\n   * ```js\n   * import { Injector } from \"@angular/core\";\n   * import { UIRouter } from \"@uirouter/angular\";\n   * import { requireAuthHook } from \"./requireAuthHook\";\n   * import { MyService } from \"./myService\";\n   *\n   * export function configureMyModule(uiRouter: UIRouter, injector: Injector, module: StatesModule) {\n   *   // Get UIRouter services off the UIRouter object\n   *   let urlConfig = uiRouter.urlService.config;\n   *   let transitionService = uiRouter.transitionService;\n   *   uiRouter.trace.enable(\"TRANSITION\");\n   *\n   *   transitionService.onBefore({ to: (state) => state.requiresAuth }, requireAuthHook);\n   *\n   *   // Create a slug type based on the string type\n   *   let builtInStringType = urlConfig.type('string');\n   *   let slugType = Object.assign({}, builtInStringType, { encode: (str) => str, decode: (str) => str });\n   *   urlConfig.type('slug', slugType);\n   *\n   *   // Inject arbitrary services from DI using the Injector argument\n   *   let myService: MyService = injector.get(MyService)\n   *   myService.useFastMode();\n   * }\n   * ```\n   *\n   * ```js\n   * @NgModule({\n   *   imports: [\n   *     UIRouterModule.forChild({ states: STATES, config: configureMyModule });\n   *   ]\n   * })\n   * class MyModule {}\n   * ```\n   */\n  config?: (uiRouterInstance: UIRouter, injector: Injector, module: StatesModule) => any;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n",
    "/** @ng2api @module core */\n/** */\nimport { NgModuleRef, Injector, NgModuleFactory, Type, Compiler, NgModuleFactoryLoader } from '@angular/core';\nimport {\n  Transition,\n  LazyLoadResult,\n  UIRouter,\n  Resolvable,\n  NATIVE_INJECTOR_TOKEN,\n  isString,\n  unnestR,\n  inArray,\n  StateObject,\n  uniqR,\n  StateDeclaration,\n} from '@uirouter/core';\nimport { RootModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN, StatesModule } from '../uiRouterNgModule';\nimport { applyModuleConfig } from '../uiRouterConfig';\n\n/**\n * A function that returns an NgModule, or a promise for an NgModule\n *\n * #### Example:\n * ```js\n * export function loadFooModule() {\n *   return System.import('../foo/foo.module').then(result => result.FooModule);\n * }\n * ```\n */\nexport type ModuleTypeCallback = () => Type<any> | Promise<Type<any>>;\n/**\n * A string or a function which lazy loads a module\n *\n * If a string, should conform to the Angular Router `loadChildren` string.\n * #### Example:\n * ```\n * var ngModuleToLoad = './foo/foo.module#FooModule'\n * ```\n *\n * For functions, see: [[ModuleTypeCallback]]\n */\nexport type NgModuleToLoad = string | ModuleTypeCallback;\n\n/**\n * Returns a function which lazy loads a nested module\n *\n * This is primarily used by the [[ng2LazyLoadBuilder]] when processing [[Ng2StateDeclaration.loadChildren]].\n *\n * It could also be used manually as a [[StateDeclaration.lazyLoad]] property to lazy load an `NgModule` and its state(s).\n *\n * #### Example:\n * Using `System.import()` and named export of `HomeModule`\n * ```js\n * declare var System;\n * var futureState = {\n *   name: 'home.**',\n *   url: '/home',\n *   lazyLoad: loadNgModule(() => System.import('./home/home.module').then(result => result.HomeModule))\n * }\n * ```\n *\n * #### Example:\n * Using a path (string) to the module\n * ```js\n * var futureState = {\n *   name: 'home.**',\n *   url: '/home',\n *   lazyLoad: loadNgModule('./home/home.module#HomeModule')\n * }\n * ```\n *\n *\n * @param moduleToLoad a path (string) to the NgModule to load.\n *    Or a function which loads the NgModule code which should\n *    return a reference to  the `NgModule` class being loaded (or a `Promise` for it).\n *\n * @returns A function which takes a transition, which:\n * - Gets the Injector (scoped properly for the destination state)\n * - Loads and creates the NgModule\n * - Finds the \"replacement state\" for the target state, and adds the new NgModule Injector to it (as a resolve)\n * - Returns the new states array\n */\nexport function loadNgModule(\n  moduleToLoad: NgModuleToLoad,\n): (transition: Transition, stateObject: StateDeclaration) => Promise<LazyLoadResult> {\n  return (transition: Transition, stateObject: StateDeclaration) => {\n    const ng2Injector = transition.injector().get(NATIVE_INJECTOR_TOKEN);\n\n    const createModule = (factory: NgModuleFactory<any>) => factory.create(ng2Injector);\n\n    const applyModule = (moduleRef: NgModuleRef<any>) => applyNgModule(transition, moduleRef, ng2Injector, stateObject);\n\n    return loadModuleFactory(moduleToLoad, ng2Injector)\n      .then(createModule)\n      .then(applyModule);\n  };\n}\n\n/**\n * Returns the module factory that can be used to instantiate a module\n *\n * For strings this:\n * - Finds the correct NgModuleFactoryLoader\n * - Loads the new NgModuleFactory from the path string (async)\n *\n * For a Type<any> or Promise<Type<any>> this:\n * - Compiles the component type (if not running with AOT)\n * - Returns the NgModuleFactory resulting from compilation (or direct loading if using AOT) as a Promise\n *\n * @internalapi\n */\nexport function loadModuleFactory(moduleToLoad: NgModuleToLoad, ng2Injector: Injector): Promise<NgModuleFactory<any>> {\n  if (isString(moduleToLoad)) {\n    return ng2Injector.get(NgModuleFactoryLoader).load(moduleToLoad);\n  }\n\n  const compiler: Compiler = ng2Injector.get(Compiler);\n  const offlineMode = compiler instanceof Compiler;\n\n  const unwrapEsModuleDefault = x => (x && x.__esModule && x['default'] ? x['default'] : x);\n  const compileAsync = (moduleType: Type<any>) => compiler.compileModuleAsync(moduleType);\n\n  const loadChildrenPromise = Promise.resolve(moduleToLoad()).then(unwrapEsModuleDefault);\n  return offlineMode ? loadChildrenPromise : loadChildrenPromise.then(compileAsync);\n}\n\n/**\n * Apply the UI-Router Modules found in the lazy loaded module.\n *\n * Apply the Lazy Loaded NgModule's newly created Injector to the right state in the state tree.\n *\n * Lazy loading uses a placeholder state which is removed (and replaced) after the module is loaded.\n * The NgModule should include a state with the same name as the placeholder.\n *\n * Find the *newly loaded state* with the same name as the *placeholder state*.\n * The NgModule's Injector (and ComponentFactoryResolver) will be added to that state.\n * The Injector/Factory are used when creating Components for the `replacement` state and all its children.\n *\n * @internalapi\n */\nexport function applyNgModule(\n  transition: Transition,\n  ng2Module: NgModuleRef<any>,\n  parentInjector: Injector,\n  lazyLoadState: StateDeclaration,\n): LazyLoadResult {\n  const injector = ng2Module.injector;\n  const uiRouter: UIRouter = injector.get(UIRouter);\n  const registry = uiRouter.stateRegistry;\n\n  const originalName = lazyLoadState.name;\n  const originalState = registry.get(originalName);\n  // Check if it's a future state (ends with .**)\n  const isFuture = /^(.*)\\.\\*\\*$/.exec(originalName);\n  // Final name (without the .**)\n  const replacementName = isFuture && isFuture[1];\n\n  const newRootModules = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_ROOT_MODULE).reduce(\n    uniqR,\n    [],\n  ) as RootModule[];\n  const newChildModules = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_MODULE_TOKEN).reduce(\n    uniqR,\n    [],\n  ) as StatesModule[];\n\n  if (newRootModules.length) {\n    console.log(newRootModules); // tslint:disable-line:no-console\n    throw new Error('Lazy loaded modules should not contain a UIRouterModule.forRoot() module');\n  }\n\n  const newStateObjects: StateObject[] = newChildModules\n    .map(module => applyModuleConfig(uiRouter, injector, module))\n    .reduce(unnestR, [])\n    .reduce(uniqR, []);\n\n  if (isFuture) {\n    const replacementState = registry.get(replacementName);\n    if (!replacementState || replacementState === originalState) {\n      throw new Error(\n        `The Future State named '${originalName}' lazy loaded an NgModule. ` +\n          `The lazy loaded NgModule must have a state named '${replacementName}' ` +\n          `which replaces the (placeholder) '${originalName}' Future State. ` +\n          `Add a '${replacementName}' state to the lazy loaded NgModule ` +\n          `using UIRouterModule.forChild({ states: CHILD_STATES }).`,\n      );\n    }\n  }\n\n  // Supply the newly loaded states with the Injector from the lazy loaded NgModule.\n  // If a tree of states is lazy loaded, only add the injector to the root of the lazy loaded tree.\n  // The children will get the injector by resolve inheritance.\n  const newParentStates = newStateObjects.filter(state => !inArray(newStateObjects, state.parent));\n\n  // Add the Injector to the top of the lazy loaded state tree as a resolve\n  newParentStates.forEach(state => state.resolvables.push(Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector)));\n\n  return {};\n}\n\n/**\n * Returns the new dependency injection values from the Child Injector\n *\n * When a DI token is defined as multi: true, the child injector\n * can add new values for the token.\n *\n * This function returns the values added by the child injector,  and excludes all values from the parent injector.\n *\n * @internalapi\n */\nexport function multiProviderParentChildDelta(parent: Injector, child: Injector, token: any) {\n  const childVals: RootModule[] = child.get(token, []);\n  const parentVals: RootModule[] = parent.get(token, []);\n  return childVals.filter(val => parentVals.indexOf(val) === -1);\n}\n",
    "/** @module ng2 */\n/** */\nimport { LazyLoadResult, Transition, StateDeclaration } from '@uirouter/core'; // has or is using\nimport { BuilderFunction, StateObject } from '@uirouter/core';\nimport { loadNgModule } from '../lazyLoad/lazyLoadNgModule';\n\n/**\n * This is a [[StateBuilder.builder]] function for ngModule lazy loading in Angular.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * decorates the `lazyLoad` property for states that have a [[Ng2StateDeclaration.ngModule]] declaration.\n *\n * If the state has a [[Ng2StateDeclaration.ngModule]], it will create a `lazyLoad` function\n * that in turn calls `loadNgModule(loadNgModuleFn)`.\n *\n * #### Example:\n * A state that has a `ngModule`\n * ```js\n * var decl = {\n *   ngModule: () => System.import('./childModule.ts')\n * }\n * ```\n * would build a state with a `lazyLoad` function like:\n * ```js\n * import { loadNgModule } from \"@uirouter/angular\";\n * var decl = {\n *   lazyLoad: loadNgModule(() => System.import('./childModule.ts')\n * }\n * ```\n *\n * If the state has both a `ngModule:` *and* a `lazyLoad`, then the `lazyLoad` is run first.\n *\n * #### Example:\n * ```js\n * var decl = {\n *   lazyLoad: () => System.import('third-party-library'),\n *   ngModule: () => System.import('./childModule.ts')\n * }\n * ```\n * would build a state with a `lazyLoad` function like:\n * ```js\n * import { loadNgModule } from \"@uirouter/angular\";\n * var decl = {\n *   lazyLoad: () => System.import('third-party-library')\n *       .then(() => loadNgModule(() => System.import('./childModule.ts'))\n * }\n * ```\n *\n */\nexport function ng2LazyLoadBuilder(state: StateObject, parent: BuilderFunction) {\n  const loadNgModuleFn = state['loadChildren'];\n  return loadNgModuleFn ? loadNgModule(loadNgModuleFn) : state.lazyLoad;\n}\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "/** @module ng2 */\n/** */\nimport { BaseLocationServices, parseUrl, UIRouter } from '@uirouter/core';\nimport { LocationStrategy } from '@angular/common';\n\n/** A `LocationServices` that delegates to the Angular LocationStrategy */\nexport class Ng2LocationServices extends BaseLocationServices {\n  constructor(router: UIRouter, private _locationStrategy: LocationStrategy, isBrowser: boolean) {\n    super(router, isBrowser);\n\n    this._locationStrategy.onPopState(evt => {\n      if (evt.type !== 'hashchange') {\n        this._listener(evt);\n      }\n    });\n  }\n\n  _get() {\n    return this._locationStrategy.path(true).replace(this._locationStrategy.getBaseHref().replace(/\\/$/, ''), '');\n  }\n\n  _set(state: any, title: string, url: string, replace: boolean): any {\n    const { path, search, hash } = parseUrl(url);\n    const urlWithHash = path + (hash ? '#' + hash : '');\n\n    if (replace) {\n      this._locationStrategy.replaceState(state, title, urlWithHash, search);\n    } else {\n      this._locationStrategy.pushState(state, title, urlWithHash, search);\n    }\n  }\n\n  dispose(router: UIRouter) {\n    super.dispose(router);\n  }\n}\n",
    "/** @module ng2 */\n/** */\n\nimport { UIRouter, is, BrowserLocationConfig } from '@uirouter/core';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\n\nexport class Ng2LocationConfig extends BrowserLocationConfig {\n  constructor(router: UIRouter, private _locationStrategy: LocationStrategy) {\n    super(router, is(PathLocationStrategy)(_locationStrategy));\n  }\n\n  baseHref(href?: string): string {\n    return this._locationStrategy.getBaseHref();\n  }\n}\n",
    "/**\n * # UI-Router for Angular (v2+)\n *\n * - [@uirouter/angular home page](https://ui-router.github.io/ng2)\n * - [tutorials](https://ui-router.github.io/tutorial/ng2/helloworld)\n * - [quick start repository](http://github.com/ui-router/quickstart-ng2)\n *\n * Getting started:\n *\n * - Use npm. Add a dependency on latest `@uirouter/angular`\n * - Import UI-Router classes directly from `\"@uirouter/angular\"`\n *\n * ```js\n * import {StateRegistry} from \"@uirouter/angular\";\n * ```\n *\n * - Create application states (as defined by [[Ng2StateDeclaration]]).\n *\n * ```js\n * export let state1: Ng2StateDeclaration = {\n *   name: 'state1',\n *   component: State1Component,\n *   url: '/one'\n * }\n *\n * export let state2: Ng2StateDeclaration = {\n *   name: 'state2',\n *   component: State2Component,\n *   url: '/two'\n * }\n * ```\n *\n * - Import a [[UIRouterModule.forChild]] module into your feature `NgModule`s.\n *\n * ```js\n * @ NgModule({\n *   imports: [\n *     SharedModule,\n *     UIRouterModule.forChild({ states: [state1, state2 ] })\n *   ],\n *   declarations: [\n *     State1Component,\n *     State2Component,\n *   ]\n * })\n * export class MyFeatureModule {}\n * ```\n *\n * - Import a [[UIRouterModule.forRoot]] module into your application root `NgModule`\n * - Either bootstrap a [[UIView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\n *\n * ```js\n * @ NgModule({\n *   imports: [\n *     BrowserModule,\n *     UIRouterModule.forRoot({ states: [ homeState ] }),\n *     MyFeatureModule,\n *   ],\n *   declarations: [\n *     HomeComponent\n *   ]\n *   bootstrap: [ UIView ]\n * })\n * class RootAppModule {}\n *\n * browserPlatformDynamic.bootstrapModule(RootAppModule);\n * ```\n *\n * - Optionally specify a configuration class [[ChildModule.configClass]] for any module\n * to perform any router configuration during bootstrap or lazyload.\n * Pass the class to [[UIRouterModule.forRoot]] or [[UIRouterModule.forChild]].\n *\n * ```js\n * import {UIRouter} from \"@uirouter/angular\";\n *\n * @ Injectable()\n * export class MyUIRouterConfig {\n *   // Constructor is injectable\n *   constructor(uiRouter: UIRouter) {\n *     uiRouter.urlMatcherFactory.type('datetime', myDateTimeParamType);\n *   }\n * }\n * ```\n *\n * @preferred @module ng2\n */\n/** */\nimport { Injector, Provider, PLATFORM_ID, APP_INITIALIZER } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  UIRouter,\n  PathNode,\n  StateRegistry,\n  StateService,\n  TransitionService,\n  UrlMatcherFactory,\n  UrlRouter,\n  ViewService,\n  UrlService,\n  UIRouterGlobals,\n  services,\n  Resolvable,\n  NATIVE_INJECTOR_TOKEN,\n} from '@uirouter/core';\nimport { UIView, ParentUIViewInject } from './directives/uiView';\nimport { ng2ViewsBuilder, Ng2ViewConfig } from './statebuilders/views';\nimport { Ng2ViewDeclaration } from './interface';\nimport { applyRootModuleConfig, applyModuleConfig } from './uiRouterConfig';\nimport { RootModule, StatesModule, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN } from './uiRouterNgModule';\nimport { servicesPlugin, ServicesPlugin } from '@uirouter/core';\nimport { ng2LazyLoadBuilder } from './statebuilders/lazyLoad';\nimport { UIRouterRx } from '@uirouter/rx';\nimport { LocationStrategy } from '@angular/common';\nimport { Ng2LocationServices } from './location/locationService';\nimport { Ng2LocationConfig } from './location/locationConfig';\n\n/**\n * This is a factory function for a UIRouter instance\n *\n * Creates a UIRouter instance and configures it for Angular, then invokes router bootstrap.\n * This function is used as an Angular `useFactory` Provider.\n */\nexport function uiRouterFactory(\n  locationStrategy: LocationStrategy,\n  rootModules: RootModule[],\n  modules: StatesModule[],\n  injector: Injector,\n) {\n  if (rootModules.length !== 1) {\n    throw new Error(\"Exactly one UIRouterModule.forRoot() should be in the bootstrapped app module's imports: []\");\n  }\n\n  // ----------------- Create router -----------------\n  // Create a new ng2 UIRouter and configure it for ng2\n  const router = new UIRouter();\n\n  // Add RxJS plugin\n  router.plugin(UIRouterRx);\n\n  // Add $q-like and $injector-like service APIs\n  router.plugin<ServicesPlugin>(servicesPlugin);\n\n  // ----------------- Monkey Patches ----------------\n  // Monkey patch the services.$injector to use the root ng2 Injector\n  services.$injector.get = injector.get.bind(injector);\n\n  // ----------------- Configure for ng2 -------------\n  router.locationService = new Ng2LocationServices(\n    router,\n    locationStrategy,\n    isPlatformBrowser(injector.get(PLATFORM_ID)),\n  );\n  router.locationConfig = new Ng2LocationConfig(router, locationStrategy);\n\n  // Apply ng2 ui-view handling code\n  const viewConfigFactory = (path: PathNode[], config: Ng2ViewDeclaration) => new Ng2ViewConfig(path, config);\n  router.viewService._pluginapi._viewConfigFactory('ng2', viewConfigFactory);\n\n  // Apply statebuilder decorator for ng2 NgModule registration\n  const registry = router.stateRegistry;\n  registry.decorator('views', ng2ViewsBuilder);\n  registry.decorator('lazyLoad', ng2LazyLoadBuilder);\n\n  // Prep the tree of NgModule by placing the root NgModule's Injector on the root state.\n  const ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector);\n  registry.root().resolvables.push(ng2InjectorResolvable);\n\n  // Auto-flush the parameter type queue\n  router.urlMatcherFactory.$get();\n\n  // ----------------- Initialize router -------------\n  rootModules.forEach(moduleConfig => applyRootModuleConfig(router, injector, moduleConfig));\n  modules.forEach(moduleConfig => applyModuleConfig(router, injector, moduleConfig));\n\n  return router;\n}\n\n// Start monitoring the URL when the app starts\nexport function appInitializer(router: UIRouter) {\n  return () => {\n    if (!router.urlRouter.interceptDeferred) {\n      router.urlService.listen();\n      router.urlService.sync();\n    }\n  };\n}\n\nexport function parentUIViewInjectFactory(r: StateRegistry) {\n  return { fqn: null, context: r.root() } as ParentUIViewInject;\n}\n\nexport const _UIROUTER_INSTANCE_PROVIDERS: Provider[] = [\n  {\n    provide: UIRouter,\n    useFactory: uiRouterFactory,\n    deps: [LocationStrategy, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN, Injector],\n  },\n  { provide: UIView.PARENT_INJECT, useFactory: parentUIViewInjectFactory, deps: [StateRegistry] },\n  { provide: APP_INITIALIZER, useFactory: appInitializer, deps: [UIRouter], multi: true },\n];\n\nexport function fnStateService(r: UIRouter) {\n  return r.stateService;\n}\nexport function fnTransitionService(r: UIRouter) {\n  return r.transitionService;\n}\nexport function fnUrlMatcherFactory(r: UIRouter) {\n  return r.urlMatcherFactory;\n}\nexport function fnUrlRouter(r: UIRouter) {\n  return r.urlRouter;\n}\nexport function fnUrlService(r: UIRouter) {\n  return r.urlService;\n}\nexport function fnViewService(r: UIRouter) {\n  return r.viewService;\n}\nexport function fnStateRegistry(r: UIRouter) {\n  return r.stateRegistry;\n}\nexport function fnGlobals(r: any) {\n  return r.globals;\n}\n\nexport const _UIROUTER_SERVICE_PROVIDERS: Provider[] = [\n  { provide: StateService, useFactory: fnStateService, deps: [UIRouter] },\n  { provide: TransitionService, useFactory: fnTransitionService, deps: [UIRouter] },\n  { provide: UrlMatcherFactory, useFactory: fnUrlMatcherFactory, deps: [UIRouter] },\n  { provide: UrlRouter, useFactory: fnUrlRouter, deps: [UIRouter] },\n  { provide: UrlService, useFactory: fnUrlService, deps: [UIRouter] },\n  { provide: ViewService, useFactory: fnViewService, deps: [UIRouter] },\n  { provide: StateRegistry, useFactory: fnStateRegistry, deps: [UIRouter] },\n  { provide: UIRouterGlobals, useFactory: fnGlobals, deps: [UIRouter] },\n];\n\n/**\n * The UI-Router providers, for use in your application bootstrap\n *\n * @deprecated use [[UIRouterModule.forRoot]]\n */\nexport const UIROUTER_PROVIDERS: Provider[] = _UIROUTER_INSTANCE_PROVIDERS.concat(_UIROUTER_SERVICE_PROVIDERS);\n",
    "/** @ng2api @module ng2 */ /** for typedoc */\n\nexport * from './interface';\nexport * from './providers';\nexport * from './uiRouterNgModule';\nexport * from './uiRouterConfig';\nexport * from './directives/directives';\nexport * from './statebuilders/views';\nexport * from './statebuilders/lazyLoad';\nexport * from './lazyLoad/lazyLoadNgModule';\n\nexport * from '@uirouter/core';\n"
  ],
  "names": [
    "pick",
    "forEach",
    "isFunction",
    "ViewService",
    "services",
    "id",
    "router",
    "parse",
    "ResolveContext",
    "unnestR",
    "filter",
    "trace",
    "ComponentFactoryResolver",
    "NATIVE_INJECTOR_TOKEN",
    "ReflectiveInjector",
    "inArray",
    "Component",
    "UIRouter",
    "Inject",
    "ViewContainerRef",
    "ViewChild",
    "Input",
    "isDefined",
    "Directive",
    "ElementRef",
    "Renderer2",
    "ReplaySubject",
    "extend",
    "isNumber",
    "Optional",
    "HostListener",
    "PathUtils",
    "tail",
    "Param",
    "anyTrueR",
    "EventEmitter",
    "switchMap",
    "of",
    "fromPromise",
    "concat",
    "BehaviorSubject",
    "combineLatest",
    "map",
    "UIRouterGlobals",
    "Output",
    "ContentChildren",
    "Renderer",
    "Host",
    "InjectionToken",
    "ROUTES",
    "ANALYZE_FOR_ENTRY_COMPONENTS",
    "APP_INITIALIZER",
    "TransitionService",
    "LocationStrategy",
    "HashLocationStrategy",
    "PathLocationStrategy",
    "NgModule",
    "CommonModule",
    "isString",
    "NgModuleFactoryLoader",
    "Compiler",
    "uniqR",
    "Resolvable",
    "tslib_1.__extends",
    "BaseLocationServices",
    "is",
    "BrowserLocationConfig",
    "locationStrategy",
    "UIRouterRx",
    "servicesPlugin",
    "isPlatformBrowser",
    "PLATFORM_ID",
    "Injector",
    "StateRegistry",
    "StateService",
    "UrlMatcherFactory",
    "UrlRouter",
    "UrlService"
  ],
  "mappings": "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"
}